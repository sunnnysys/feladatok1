import java.util.Scanner;



public class Szamol3Teszt {

    static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
// Szamol3 sz = new Szamol3(0, 0);
        System.out.println("");
        System.out.println("Kérek két egész számot.");
        System.out.println("Első szám: ");
        int _num1 = scanner.nextInt();
// sz.setNum1(_num1);
        System.out.println("Második szám: ");
        int _num2 = scanner.nextInt();
// sz.setNum2(_num2);
        System.out.println("");
        System.out.println("Két szám relációjának kiírása:");
        Szamol3 sz = new Szamol3(_num1, _num2);
        switch (sz.relacio()) {
            case 1:
                System.out.println(sz.getNum1() + " " + "nagyobb, mint " + sz.getNum2() + ".");
                break;
            case -1:
                System.out.println(sz.getNum1() + " " + "kisebb, mint " + sz.getNum2() + ".");
                break;
            case 0:
                System.out.println(sz.getNum1() + " " + "egyenlő " + sz.getNum2() + ".");
                break;
        }
        System.out.println("");
        System.out.println("Két szám közös osztóinak kiírása:");
        System.out.println("A két szám közös osztói:");
        System.out.println(sz.kozosOszto());
        System.out.println("");
        System.out.println("Hány random számot szeretnél kiíratni?");
        int meret = scanner.nextInt();
        Tarolo t = new Tarolo(meret);
        System.out.println("");
        System.out.println(meret + " darab véletlen szám:");
        System.out.println(t.veletlen());
        System.out.println("");
        System.out.println("A számok növekvő sorrendben:");
        System.out.println(t.novekvo());
    }
}


/////////////////////////////////////////////////////////////


import java.util.ArrayList;
import java.util.Random;

public class Tarolo {

    private int meret;
    private final ArrayList al = new ArrayList();

    Tarolo(int szam) {
        this.meret = szam;
    }

    public ArrayList veletlen() {
        Random random = new Random();
        for (int i = 0; i <= meret - 1; ++i) {
            int randomInt = random.nextInt(1000);
            al.add(randomInt);
        }
        return al;
    }

    public ArrayList novekvo() {
        for (int i = 0; i < al.size() - 1; i++) {
            for (int j = i + 1; j < al.size(); j++) {
                if ((int) al.get(i) > (int) al.get(j)) {
                    int temp = (int) al.get(j);
                    al.set(j, al.get(i));
                    al.set(i, temp);
                }
            }
        }
        return al;
    }
}
